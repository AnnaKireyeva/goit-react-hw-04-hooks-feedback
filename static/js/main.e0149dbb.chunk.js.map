{"version":3,"sources":["Components/Statistics/Statistics.module.css","Components/FeedbackOptions/FeedbackOptions.module.css","Components/Section/Section.module.css","Components/Notification/Notification.module.css","Components/Statistics/Statistics.js","Components/FeedbackOptions/FeedbackOptions.js","Components/Section/Section.js","Components/Notification/Notification.js","App.js","index.js"],"names":["module","exports","Statistics","good","neutral","bad","total","positiveFeedback","className","styles","statisticList","statisticItem","FeedbackOptions","options","onLeaveFeedback","arrBtn","Object","keys","feedbackBtnList","map","btn","feedbackBtnItem","type","onClick","name","Section","title","children","container","sectionTitle","Notification","message","notification","App","useState","setGood","setNeutral","setBad","countTotalFeedback","positiveFeedbackPercent","Math","round","countPositiveFeedbackPercentage","event","target","prevGood","prevNeutral","prevBad","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"2IACAA,EAAOC,QAAU,CAAC,cAAgB,oC,gBCAlCD,EAAOC,QAAU,CAAC,gBAAkB,yCAAyC,gBAAkB,yCAAyC,IAAM,+B,kBCA9ID,EAAOC,QAAU,CAAC,UAAY,2BAA2B,aAAe,gC,iBCAxED,EAAOC,QAAU,CAAC,aAAe,qC,6HCuBlBC,EApBI,SAAC,GAAD,IAAGC,EAAH,EAAGA,KAAMC,EAAT,EAASA,QAASC,EAAlB,EAAkBA,IAAKC,EAAvB,EAAuBA,MAAOC,EAA9B,EAA8BA,iBAA9B,OACjB,qBAAIC,UAAWC,IAAOC,cAAtB,UACE,qBAAIF,UAAWC,IAAOE,cAAtB,mBAA4CR,KAC5C,qBAAIK,UAAWC,IAAOE,cAAtB,sBAA+CP,KAC/C,qBAAII,UAAWC,IAAOE,cAAtB,kBAA2CN,KAC3C,qBAAIG,UAAWC,IAAOE,cAAtB,oBAA6CL,KAC7C,qBAAIE,UAAWC,IAAOE,cAAtB,gCACsBJ,EADtB,W,gBCmBWK,EAzBS,SAAC,GAAkC,IAAhCC,EAA+B,EAA/BA,QAASC,EAAsB,EAAtBA,gBAC5BC,EAASC,OAAOC,KAAKJ,GAC3B,OACE,oBAAIL,UAAWC,IAAOS,gBAAtB,SACGH,EAAOI,KAAI,SAAAC,GAAG,OACb,oBAAIZ,UAAWC,IAAOY,gBAAtB,SACE,wBACEb,UAAWC,IAAOW,IAClBE,KAAK,SACLC,QAAST,EACTU,KAAMJ,EAJR,SAMGA,KAPuCA,S,gBCQrCK,EAbC,SAAC,GAAyB,IAAvBC,EAAsB,EAAtBA,MAAOC,EAAe,EAAfA,SACxB,OACE,sBAAKnB,UAAWC,IAAOmB,UAAvB,UACE,oBAAIpB,UAAWC,IAAOoB,aAAtB,SAAqCH,IACpCC,M,gBCIQG,EARM,SAAC,GAAD,IAAGC,EAAH,EAAGA,QAAH,OACnB,mBAAGvB,UAAWC,IAAOuB,aAArB,SAAoCD,KCEvB,SAASE,IACtB,MAAwBC,mBAAS,GAAjC,mBAAO/B,EAAP,KAAagC,EAAb,KACA,EAA8BD,mBAAS,GAAvC,mBAAO9B,EAAP,KAAgBgC,EAAhB,KACA,EAAsBF,mBAAS,GAA/B,mBAAO7B,EAAP,KAAYgC,EAAZ,KAqBMC,EAAqB,WACzB,OAAOnC,EAAOC,EAAUC,GAWtBC,EAAQgC,IACR/B,EAToC,WACtC,IAAIgC,EAA0B,EAI9B,OAHa,IAATpC,IACFoC,EAA0BC,KAAKC,MAAOtC,EAAOmC,IAAwB,MAEhEC,EAIcG,GAEvB,OACE,gCACE,cAAC,EAAD,CAAShB,MAAO,wBAAhB,SACE,cAAC,EAAD,CACEb,QAAS,CAAEV,OAAMC,UAASC,OAC1BS,gBAvCoB,SAAA6B,GAC1B,OAAQA,EAAMC,OAAOpB,MACnB,IAAK,OACHW,GAAQ,SAAAU,GAAQ,OAAIA,EAAW,KAC/B,MAEF,IAAK,UACHT,GAAW,SAAAU,GAAW,OAAIA,EAAc,KACxC,MAEF,IAAK,MACHT,GAAO,SAAAU,GAAO,OAAIA,EAAU,KAC5B,MAEF,QACE,aA4BF,cAAC,EAAD,CAASrB,MAAO,aAAhB,SAC4B,IAAzBY,IACC,cAAC,EAAD,CACEnC,KAAMA,EACNC,QAASA,EACTC,IAAKA,EACLC,MAAOA,EACPC,iBAAkBA,IAGpB,cAAC,EAAD,CAAcwB,QAAS,8B,MC5DjCiB,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAACjB,EAAD,MAEFkB,SAASC,eAAe,W","file":"static/js/main.e0149dbb.chunk.js","sourcesContent":["// extracted by mini-css-extract-plugin\nmodule.exports = {\"statisticItem\":\"Statistics_statisticItem__1oOmU\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"feedbackBtnList\":\"FeedbackOptions_feedbackBtnList__2mBqI\",\"feedbackBtnItem\":\"FeedbackOptions_feedbackBtnItem__CbrUe\",\"btn\":\"FeedbackOptions_btn__1TdWN\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"container\":\"Section_container__1AfF9\",\"sectionTitle\":\"Section_sectionTitle__1t55I\"};","// extracted by mini-css-extract-plugin\nmodule.exports = {\"notification\":\"Notification_notification__zQ09j\"};","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Statistics.module.css';\r\n\r\nconst Statistics = ({ good, neutral, bad, total, positiveFeedback }) => (\r\n  <ul className={styles.statisticList}>\r\n    <li className={styles.statisticItem}>Good: {good}</li>\r\n    <li className={styles.statisticItem}>Neutral: {neutral}</li>\r\n    <li className={styles.statisticItem}>Bad: {bad}</li>\r\n    <li className={styles.statisticItem}>Total: {total}</li>\r\n    <li className={styles.statisticItem}>\r\n      Positive feedback: {positiveFeedback}%\r\n    </li>\r\n  </ul>\r\n);\r\n\r\nStatistics.propTypes = {\r\n  good: PropTypes.number.isRequired,\r\n  neutral: PropTypes.number.isRequired,\r\n  bad: PropTypes.number.isRequired,\r\n  total: PropTypes.number.isRequired,\r\n  positiveFeedback: PropTypes.number.isRequired,\r\n};\r\n\r\nexport default Statistics;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './FeedbackOptions.module.css';\r\n\r\nconst FeedbackOptions = ({ options, onLeaveFeedback }) => {\r\n  const arrBtn = Object.keys(options);\r\n  return (\r\n    <ul className={styles.feedbackBtnList}>\r\n      {arrBtn.map(btn => (\r\n        <li className={styles.feedbackBtnItem} key={btn}>\r\n          <button\r\n            className={styles.btn}\r\n            type=\"button\"\r\n            onClick={onLeaveFeedback}\r\n            name={btn}\r\n          >\r\n            {btn}\r\n          </button>\r\n        </li>\r\n      ))}\r\n    </ul>\r\n  );\r\n};\r\n\r\nFeedbackOptions.propTypes = {\r\n  options: PropTypes.object,\r\n  onLeaveFeedback: PropTypes.func,\r\n};\r\n\r\nexport default FeedbackOptions;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Section.module.css';\r\n\r\nconst Section = ({ title, children }) => {\r\n  return (\r\n    <div className={styles.container}>\r\n      <h2 className={styles.sectionTitle}>{title}</h2>\r\n      {children}\r\n    </div>\r\n  );\r\n};\r\n\r\nSection.propTypes = {\r\n  title: PropTypes.string,\r\n};\r\n\r\nexport default Section;\r\n","import React from 'react';\r\nimport PropTypes from 'prop-types';\r\nimport styles from './Notification.module.css';\r\n\r\nconst Notification = ({ message }) => (\r\n  <p className={styles.notification}>{message}</p>\r\n);\r\n\r\nNotification.propTypes = {\r\n  message: PropTypes.string,\r\n};\r\n\r\nexport default Notification;\r\n","import { useState } from 'react';\n\nimport Statistics from './Components/Statistics/Statistics';\nimport FeedbackOptions from './Components/FeedbackOptions/FeedbackOptions';\nimport Section from './Components/Section/Section';\nimport Notification from './Components/Notification/Notification';\n\nexport default function App() {\n  const [good, setGood] = useState(0);\n  const [neutral, setNeutral] = useState(0);\n  const [bad, setBad] = useState(0);\n\n  const handleLeaveFeedback = event => {\n    switch (event.target.name) {\n      case 'good':\n        setGood(prevGood => prevGood + 1);\n        break;\n\n      case 'neutral':\n        setNeutral(prevNeutral => prevNeutral + 1);\n        break;\n\n      case 'bad':\n        setBad(prevBad => prevBad + 1);\n        break;\n\n      default:\n        return;\n    }\n  };\n\n  const countTotalFeedback = () => {\n    return good + neutral + bad;\n  };\n\n  const countPositiveFeedbackPercentage = () => {\n    let positiveFeedbackPercent = 0;\n    if (good !== 0) {\n      positiveFeedbackPercent = Math.round((good / countTotalFeedback()) * 100);\n    }\n    return positiveFeedbackPercent;\n  };\n\n  let total = countTotalFeedback();\n  let positiveFeedback = countPositiveFeedbackPercentage();\n\n  return (\n    <div>\n      <Section title={'Please leave feedback'}>\n        <FeedbackOptions\n          options={{ good, neutral, bad }}\n          onLeaveFeedback={handleLeaveFeedback}\n        />\n      </Section>\n\n      <Section title={'Statistics'}>\n        {countTotalFeedback() !== 0 ? (\n          <Statistics\n            good={good}\n            neutral={neutral}\n            bad={bad}\n            total={total}\n            positiveFeedback={positiveFeedback}\n          />\n        ) : (\n          <Notification message={'There is no feedback'} />\n        )}\n      </Section>\n    </div>\n  );\n}\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport App from './App';\nimport './index.css';\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n);\n"],"sourceRoot":""}